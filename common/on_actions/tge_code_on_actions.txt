on_monthly_pulse_country = {
	on_actions = {
		tge_monthly_pulse
	}
}

on_yearly_pulse_country = {
	on_actions = {
		tge_yearly_pulse
	}
}


on_character_creation = {
	on_actions = {
		tge_on_character_creation 
	}
}

tge_on_character_creation = {
	effect = {
		set_variable = {
			name = personal_wealth
			value = tge_starting_wealth_value
		}
	}
}

tge_monthly_pulse = {
	effect = {
		
		#Monthy loyalist gain
		add_loyalists = {
			value = {
				value = modifier:country_monthly_loyalists_add  #0.001 #0.1% Per month. That's reasonable, right...???
				}
			}
		#Monthly radical gain
		add_radicals = {
			value = {
				value = modifier:country_monthly_radicals_add
			}
		}
		
	
		onaction_civilization_level_calc = yes
		
		onaction_protectorate_check = yes
		
		#Empire Sprawl
		onaction_empire_sprawl_calc = yes
		
		#TODO: IG leader loyalty affecting IG
		#every_interest_group = {
		#	if = {
		#		limit = { has_modifier = leader_loyalty_impact }
		#		remove_modifier = leader_loyalty_impact 
		#	}
		#	
		#	set_variable = {
		#		name = loyalty_impact_temporary_var
		#		value = {
		#				value = leader.get_loyalty
		#				divide = 10
		#			}
		#		}
		#	
		#	add_modifier = {
		#		name = leader_loyalty_impact 
		#		multiplier = var:loyalty_impact_temporary_var
		#	}
		#}
		#remove_variable = loyalty_impact_temporary_var
		
		
		#Character Wages
			#When I was coding this, I was listening to SilvaGunner's Shakeover in order to keep myself awake. What is the shakeover, you may ask? well, it's just video game music with the Harlem Shake stapled onto it. It's really stupid. It really contributed to the feeling of losing my marbles as i attempt to code this mechanic, though. If you want to find yourself in the same headspace as I am right now writing this, go look for Title Screen (Alternative Version) - CrazyBus
			#Edit: The very next song in the playlist is a remix that is even more grating to the ears. Maybe there is no god
		
		remove_modifier = paying_character_wages
		add_modifier = {
			name = paying_character_wages 
			multiplier = get_character_wage_payment_mult
		}
		every_scope_character = {
			limit = {
				has_role = politician
				is_heir = no
				is_ruler = no
			}
			change_variable = {
				name = personal_wealth
				add = tge_change_wealth_character
			}
		}
		#ruler = {
		#	change_variable = {
		#		name = personal_wealth
		#		add = {
		#			value = get_total_character_wage_payment
		#			multiply = 0.2
		#			multiply = 4
		#			}
		#		}
		#	}
		#heir = {
		#	change_variable = {
		#		name = personal_wealth
		#		add = {
		#			value = get_total_character_wage_payment
		#			multiply = 0.05
		#			multiply = 4
		#			}
		#		}
		#	}
		
		
	}
	
	events = {
	}
	
	#Random Events 
	random_events = {
		500 = 0

		#Loyalty Mechanics - should trigger often first
		999 = character_events.1011
		999 = character_events.1012
		999 = character_events.1013
		
		#Character Events - Personal Situations
		10 = character_events.1005
		10 = character_events.1006
		10 = character_events.1007
		10 = character_events.1102
		10 = character_events.1016 
		
		#Character Events - Administration
		
		#Character Events - Matters of the Realm
		
		#Character Events - Characters Doing Stuff
		10 = character_events.1008
		10 = character_events.1009
		10 = character_events.1010
		10 = character_events.1017
		10 = character_events.1020
		
		#Character Events - Ruler
		
		#Character Events - Heir
		

	}

	#Empire Sprawl Events 
	#Disabled due to critical un-funnity
	random_events = {
		50 = 0
		
		#Critical Sprawl 
		#1 = empire_sprawl.2
		#1 = empire_sprawl.6
			
		#High Sprawl 
		#1 = empire_sprawl.1
		#1 = empire_sprawl.3
		#1 = empire_sprawl.4
		#1 = empire_sprawl.5
	}
	
	# Election Events
	random_events = {
		100 = 0
	}
	
}

tge_yearly_pulse = {
	
	effect = {
		# IG leader death
		random_list = {
			1 = {
				trigger_event = { id = character_events.100 }
			}
			1 = { }
		}
		
		#Imperial Copilot
		if = {
			limit = {
				has_law = law_type:law_bellicose
				
				is_diplomatic_play_initiator = no
				is_diplomatic_play_committed_participant = no
				is_diplomatic_play_target = no
				
				is_subject = no
				is_ai = yes
				is_at_war = no
				
				NOT = {
					scaled_debt > 0.25
					bureaucracy < 0
				}
				OR = {
					infamy < 100
					empire_sprawl_deficit < 0.25
				}
				OR = {
					has_journal_entry = je_kindling_the_empire
					has_strategy = ai_strategy_imperial_ambitions
				}
				#Valid country exists 
				any_country = {
					is_diplomatic_play_committed_participant = no
					is_ai = yes
					is_adjacent_to_country = ROOT
					country_rank < rank_value:major_power
					NOT = {
						is_country_type = decentralized
						is_subject_of = ROOT
						is_diplomatic_play_enemy_of = root
						has_truce_with = ROOT
					}
					exists = yes
				}
			}
			
			change_infamy = 1
			random_country = {
				limit = {
					is_diplomatic_play_committed_participant = no
					is_ai = yes
					is_adjacent_to_country = ROOT
					country_rank < rank_value:major_power
					NOT = {
						is_country_type = decentralized
						is_subject_of = ROOT
						is_diplomatic_play_enemy_of = root
						has_truce_with = ROOT
					}
				}
				save_scope_as = imperial_copilot_target
			}
			if = {	
				limit = {
					NOT = { 
						has_truce_with = scope:imperial_copilot_target
					}
				}
				create_diplomatic_play = {
					type = dp_make_tributary
					target_country = scope:imperial_copilot_target
				}
			}
		}	
	}
	
	#Random Pool
	random_events = {
		150 = 0
		
		#politikz
		50 = interest_group_change.1

		#Acts of God
		30 = harvest_events.1
		30 = harvest_events.2
		
		#Mesoamerica Flavor
		10 = flavor_events.1
		10 = flavor_events.2
		

	}
}

on_protectorate = { }


#Empire Sprawl pog

on_battle_won = { }

on_settlements	= {
	effect = {
		
		
		add_building_level = {
				building = building_minor_settlement
				level = settlement_amount
				}
		
		#create_building = {
		#		building = building_minor_settlement
		#		
		#		level = settlement_amount
		#		}
	
	
		#if = {
		#	limit = {
		#		state_unemployment_rate >= 0.05
		#	}
		#	
		#	
		#
		#
		#	#if = {
		#		limit = {
		#			NOT = {
		#			has_building = building_minor_settlement
		#			}
		#		}
		#		
		#		create_building = {
		#		building = building_minor_settlement
		#		}
		#	}
		#	
		#	
		#	add_building_level = {
		#		building = building_minor_settlement
		#		level = 1
		#		}
		#	}
		#
		}
	}





#Disabled until paradox fixes their bugs

#on_tribute = { # put this in a state on action like on_monthly_pulse_state
#  effect = {
#    if = {
#      limit = {
#        is_incorporated = no
#		owner = {
#				OR = {
#					has_law = law_type:law_tributaries 
#					has_law = law_type:law_occupation
#					}
#			}
#		}
#	#Urban Buildings
#	activate_production_method = {
#			building_type = building_clothing_workshop
#			production_method = pm_tribute
#			}
#	activate_production_method = {
#			building_type = building_furniture_workshop
#			production_method = pm_tribute
#			}
#	activate_production_method = {
#			building_type = building_tooling_workshop
#			production_method = pm_tribute
#			}
#	activate_production_method = {
#			building_type = building_pottery
#			production_method = pm_tribute
#			}
#			
#	#Agri Buildings
#	activate_production_method = {
#			building_type = building_maize_farm
#			production_method = pm_tribute
#			}
#	activate_production_method = {
#			building_type = building_cotton_farm
#			production_method = pm_tribute
#			}
#	activate_production_method = {
#			building_type = building_chinampa
#			production_method = pm_tribute
#			}
#	activate_production_method = {
#			building_type = building_rubber_harvestry
#			production_method = pm_tribute
#			}
#	activate_production_method = {
#			building_type = building_cocoa_harvestry
#			production_method = pm_tribute
#			}
#	
#		}
#	}
#}

#on_administration = { # put this in a state on action like on_monthly_pulse_state
#  effect = {
#    if = {
#      limit = {
#        is_incorporated = no
#      }
#      activate_production_method = {
#        building_type = building_urban_center
#        production_method = pm_informal_administration
#      }
#    }
#    else_if = {
#     limit = {
#			owner = {
#				has_law = law_type:law_courtly_administration
#			}
#		}
#		activate_production_method = {
#			building_type = building_urban_center
#			production_method = pm_courtly_administration
#			}		
#		
#	}
#    else_if = {
#		limit = {
#			owner = {
#			has_law = law_type:law_local_administration
#			}
#		}
#		activate_production_method = {
#			building_type = building_urban_center
#			production_method = pm_local_administration
#			}		
#		
#    }
#    else_if = {
#		limit = {
#			owner = {
#			has_law = law_type:law_bureaucratic_administration
#			}
#		}
#		activate_production_method = {
#			building_type = building_urban_center
#			production_method = pm_bureaucratic_administration
#			}		
#		
#    }
#  }
#}
