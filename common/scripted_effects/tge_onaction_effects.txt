onaction_protectorate_check = {
	
	trigger_event = { id = subject_management.1 popup = yes }
	any_country = {
			limit = {
			is_subject_of = ROOT
			is_subject_type = subject_type_protectorate 
			}
			save_scope_as = protectorate_to_change
		}



	}
	
onaction_imperial_copilot = {
	
	

	
	}


onaction_empire_sprawl_calc = {
	
	
	#Sprawl capcity
	set_variable = {
		name = var_empire_sprawl_capacity
		value = {
			add = modifier:country_empire_sprawl_capacity_add
			multiply = {
				add = 1
				add = modifier:country_empire_sprawl_capacity_mult
				}
			}
		}
		
		
	#Sprawl Load
	set_variable = {
		name = var_empire_sprawl_load
		value = {
			add = modifier:country_empire_sprawl_load
			add = sprawl_get_base_value
			add = sprawl_get_vassal_value
			
			multiply = {
				add = 1
				add = modifier:country_empire_sprawl_load_mult
				}
			multiply = {
				add = sprawl_get_multiplier
				}
			
			}
		}
		
		
	#Empire Sprawl
	set_variable = {
		name = var_empire_sprawl
		value = {
			add = var:var_empire_sprawl_capacity
			subtract = var:var_empire_sprawl_load
		}
	}
	
	#Applying the actual bonus
	if = {
		limit = {
		has_modifier = empire_sprawl_bonus
		}
		remove_modifier = empire_sprawl_bonus
	}	
	if = {
		limit = {
		has_modifier = empire_sprawl_malus
		}
		remove_modifier = empire_sprawl_malus
	}	
	
	IF = {
		limit = {
			var:var_empire_sprawl > 0
		}
		add_modifier = {
			name = empire_sprawl_bonus
			multiplier = empire_sprawl_surplus
		}
	}
	ELSE_IF = {
		limit = {
			var:var_empire_sprawl < 0
		}
		
	
		add_modifier = {
			name = empire_sprawl_malus
			multiplier = empire_sprawl_deficit
		}
	}


	}
	
#Onaction Cultural Influence Calc

onaction_civilization_level_calc = {
	
	
	
	set_variable = {
		name = civilization_value_literacy_bonus
		value = {
				value = literacy_rate
				multiply = 0.2
				}
		}
	set_variable = {
		name = civilization_value_sol_bonus
		value = {
				value = average_sol
				divide = 100
				}
		}
	
	#Calculating Average Urbanization
	set_variable = {
		name = num_of_states
		value = {
			every_scope_state = {
				add = 1
				}
			}
		}
	
	set_variable = {
		name = civilization_value_urbanization_bonus
		value = {
			every_scope_state = {
				add = total_urbanization
				}
			divide = var:num_of_states
			divide = 100
			divide = 100
			}
		}
	
	set_variable = {
		name = civilization_value
		value = {
		
			#You can get ~20% from literacy rate
			add = var:civilization_value_literacy_bonus
			
			#Uncapped from SoL
			add = var:civilization_value_sol_bonus
			
			#Uncapped from Urbanization
			add = var:civilization_value_urbanization_bonus
			
			#The Modifiers
			add = modifier:country_civilization_value
			
			
			min = 0
			max = 1
		}
	}
	
	#Removing Modifiers
	if = {
		limit = {
		has_modifier = civilization_level_1
		}
		remove_modifier = civilization_level_1
	}
	if = {
		limit = {
		has_modifier = civilization_level_2
		}
		remove_modifier = civilization_level_2
	}
	if = {
		limit = {
		has_modifier = civilization_level_3
		}
		remove_modifier = civilization_level_3
	}
	if = {
		limit = {
		has_modifier = civilization_level_4
		}
		remove_modifier = civilization_level_4
	}
	if = {
		limit = {
		has_modifier = civilization_level_5
		}
		remove_modifier = civilization_level_5
	}
	
	#Civilization Level
	set_variable = {
		name = civilization_level
		value = get_civilization_level
		}
	
	#Applying Modifier
	IF = {
		limit = {
			var:civilization_level = 1 
		}
		add_modifier = {
			name = civilization_level_1
			}
	}
	ELSE_IF = {
		limit = {
			var:civilization_level = 2 
		}
		
		add_modifier = {
			name = civilization_level_2
			}
	}
	ELSE_IF = {
		limit = {
			var:civilization_level = 3
		}
		
		add_modifier = {
			name = civilization_level_3
			}
	}
	ELSE_IF = {
		limit = {
			var:civilization_level = 4
		}
		add_modifier = {
			name = civilization_level_4
			}
	}
	ELSE_IF = {
		limit = {
			var:civilization_level = 5 
		}
		add_modifier = {
			name = civilization_level_5
			}
	}
	
	
	
	

	}
	
#Onaction Minor settlement spawn
onaction_minor_settlement_spawn = {
	
	
	if = {
		limit = {
		has_modifier = state_minor_settlement_modifier
		}
		remove_modifier = state_minor_settlement_modifier
	}
	
	add_modifier = {
		name = state_minor_settlement_modifier
		multiplier = settlement_amount
		}
	create_building = {
			building = building_barracks
			level = 1
			}

	
	
	

	}